name: Build Godot
description: Build Godot with the provided options.

inputs:
  target:
    description: Build target (editor, template_release, template_debug).
    default: editor
  tests:
    description: Unit tests.
    default: false
    required: false
  platform:
    description: Target platform.
    required: false
  sconsflags:
    description: Additional SCons flags.
    default: ''
    required: false
  scons-cache:
    description: The SCons cache path.
    default: ${{ github.workspace }}/.scons-cache/
  scons-cache-limit:
    description: The SCons cache size limit.
    # actions/cache has 10 GiB limit, and GitHub runners have a 14 GiB disk.
    # Limit to 7 GiB to avoid having the extracted cache fill the disk.
    default: 7168
  godot-cpp:
    description: Build godot-cpp as well.
    default: false
  bin:
    description: The path to the Godot executable; only required if building godot-cpp.
    default: ''

runs:
  using: composite
  steps:
    - name: SCons Build
      shell: sh
      env:
        SCONSFLAGS: ${{ inputs.sconsflags }}
        SCONS_CACHE: ${{ inputs.scons-cache }}
        SCONS_CACHE_LIMIT: ${{ inputs.scons-cache-limit }}
      run: |
        echo "Building with flags:" platform=${{ inputs.platform }} target=${{ inputs.target }} tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}

        if [ "${{ inputs.target }}" != "editor" ]; then
          # Ensure we don't include editor code in export template builds.
          rm -rf editor
        fi

        if [ "${{ github.event.number }}" != "" ]; then
          # Set build identifier with pull request number if available. This is displayed throughout the editor.
          export BUILD_NAME="gh-${{ github.event.number }}"
        else
          export BUILD_NAME="gh"
        fi

        scons platform=${{ inputs.platform }} target=${{ inputs.target }} tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}
        ls -l bin/

        if [ ${{ inputs.godot-cpp }} = true ]; then
          ${{ inputs.bin }} --headless --dump-gdextension-interface --dump-extension-api
          cp -f gdextension_interface.h godot-cpp/gdextension/
          cp -f extension_api.json godot-cpp/gdextension/

          echo Building with flags: --directory=godot-cpp/test ${{ env.SCONSFLAGS }}
          scons --directory=godot-cpp/test ${{ env.SCONSFLAGS }}
        fi

    # - name: SCons Build (godot-cpp)
    #   if: inputs.godot-cpp
    #   shell: sh
    #   env:
    #     SCONSFLAGS: ${{ inputs.sconsflags }}
    #     SCONS_CACHE: ${{ inputs.scons-cache }}
    #     SCONS_CACHE_LIMIT: ${{ inputs.scons-cache-limit }}
    #   run: |
    #     echo ${{ inputs.godot-cpp }}

    #     ${{ inputs.bin }} --headless --dump-gdextension-interface --dump-extension-api
    #     cp -f gdextension_interface.h godot-cpp/gdextension/
    #     cp -f extension_api.json godot-cpp/gdextension/

    #     # echo Building with flags: --directory=godot-cpp/test platform=${{ inputs.platform }} target=${{ inputs.target }} ${{ env.SCONSFLAGS }}
    #     # scons --directory=godot-cpp/test platform=${{ inputs.platform }} target=${{ inputs.target }} ${{ env.SCONSFLAGS }}
    #     echo Building with flags: --directory=godot-cpp/test target=${{ inputs.target }} ${{ env.SCONSFLAGS }}
    #     scons --directory=godot-cpp/test target=${{ inputs.target }} ${{ env.SCONSFLAGS }}
