name: 🏁 Windows Builds
on:
  workflow_call:

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: master
  SCONSFLAGS: >-
    dev_mode=yes
    module_text_server_fb_enabled=yes
    d3d12=yes
    "angle_libs=${{ github.workspace }}/"
    debug_symbols=yes
    separate_debug_symbols=yes
    vsproj_gen_only=no
    windows_subsystem=console
  SCONS_CACHE_MSVC_CONFIG: true

concurrency:
  group: ci-${{ github.actor }}-${{ github.head_ref || github.run_number }}-${{ github.ref }}-windows
  cancel-in-progress: true

jobs:
  build-windows:
    # Windows 10 with latest image
    runs-on: windows-latest
    name: >-
      ${{ matrix.target == 'editor' && 'Editor' || 'Template'}} -
      ${{ matrix.compiler == 'msvc' && 'MSVC/cl' || matrix.compiler == 'clang' && 'MSVC/LLVM' || 'MinGW/GCC' }} -
      ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        target: [editor, template_release]
        compiler: [msvc, clang, gcc]
        arch: [x86_64, x86_32] # Add `arm64` when Windows ARM is available as `runs-on` option.

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Create environment variables
        run: |
          echo "CACHE_NAME=windows-${{ matrix.target }}-${{ matrix.compiler }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
          # TODO: concatenate variable beforehand
          echo "BIN=./bin/godot.windows.${{ matrix.target }}.${{ matrix.arch }}${{ matrix.compiler == 'clang' && '.llvm' || '' }}.exe" >> $env:GITHUB_ENV

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ env.CACHE_NAME }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Download Direct3D 12 SDK components
        run: python ./misc/scripts/install_d3d12_sdk_windows.py

      - name: Download pre-built ANGLE static libraries
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: godotengine/godot-angle-static
          version: tags/chromium/6601.2
          file: godot-angle-static-${{ matrix.arch }}-${{ matrix.compiler == 'gcc' && 'gcc' || 'msvc' }}-release.zip
          target: angle/angle.zip

      - name: Extract pre-built ANGLE static libraries
        run: Expand-Archive -Force angle/angle.zip ${{ github.workspace }}/

      - name: Setup MSVC problem matcher
        if: matrix.compiler == 'msvc'
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Setup GCC problem matcher
        if: matrix.compiler != 'msvc'
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Setup 32-bit MinGW
        if: matrix.arch == 'x86_32' && matrix.compiler == 'gcc'
        shell: bash
        run: |
          pacman -S mingw-w64-i686-python3-pip mingw-w64-i686-gcc make

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: >-
            ${{ env.SCONSFLAGS }}
            ${{ matrix.sconsflags }}
            arch=${{ matrix.arch }}
            vsproj=${{ matrix.compiler == 'msvc' && matrix.target == 'editor' && matrix.arch == 'x86_64' }}
            use_mingw=${{ matrix.compiler == 'gcc' }}
            use_llvm=${{ matrix.compiler == 'clang' }}
          platform: windows
          target: ${{ matrix.target }}
          tests: true

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ env.CACHE_NAME }}
        continue-on-error: true

      - name: Prepare artifact
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ env.CACHE_NAME }}

      - name: Unit tests
        run: |
          ${{ env.BIN }} --version
          ${{ env.BIN }} --help
          ${{ env.BIN }} --test --force-colors
